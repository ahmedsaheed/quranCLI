plugins {
    id 'java'
    id 'application'
    id 'org.jreleaser' version '1.0.0'
    id 'org.kordamp.gradle.java-project' version '0.47.0'

}

group 'org.example'
version '1.0'

downloadLicenses {
    dependencyConfiguration = 'implementation'
    includeProjectDependencies = true
}
// build.gradle app
apply plugin: 'com.github.hierynomus.license'
configurations.implementation.setCanBeResolved(true)

repositories {
    mavenCentral()
}
tasks.withType(Javadoc) {
    failOnError false
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

application {
    mainClass = 'quranCLI'
}

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'org.json:json:20220320'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'de.vandermeer:asciitable:0.3.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'info.picocli:picocli:4.6.1'
    annotationProcessor 'info.picocli:picocli-codegen:4.6.1'
    implementation group: 'javazoom', name: 'jlayer', version: '1.0.1'


}
config {
    info {
        name          = 'quranCLI'
        description   = 'A simple tool to Read, Search and Recite the Quran.'
        inceptionYear = '2022'
        vendor        = 'Ahmed Saheed'

        links {
            website      = 'https://github.com/ahmedsaheed/quranCLI'
            issueTracker = 'https://github.com/ahmedsaheed/quranCLI/issues'
            scm          = 'https://github.com/ahmedsaheed/quranCLI.git'
        }

        scm {
            url                 = 'https://github.com/ahmedsaheed/quranCLI'
            connection          = 'scm:git:https://github.com/ahmedsaheed/quranCLI.git'
            developerConnection = 'scm:git:https://github.com/ahmedsaheed/quranCLI.git'
        }

        people {
            person {
                id    = 'Ahmed Saheed'
                name  = 'Ahmed Saheed'
                roles = ['developer', 'author']
            }
        }
    }

    licensing {
        licenses {
            license {
                id = 'Apache-2.0'
                include "**/*.java"
                exclude "**/*Test.java"
                exclude "**/*.properties"

            }
        }
    }
}

jreleaser {
    release {
        github {
            owner = 'ahmedsaheed'
            name = 'quranCLI'
            overwrite = true
            enabled = true
            connectTimeout = 20
            readTimeout = 60
            host = 'github.com'
            username = 'ahmedsaheed'
            apiEndpoint = 'https://api.github.com'
            tagName = 'v1.0.0'
            previousTagName = 'v0.9.0'
            releaseName = 'Release v1.0.0'

            update {
                enabled = true
                section('ASSETS')
                skipTag = false
                skipRelease = false
                sign = false
                branch = 'main'
                uploadAssets = 'ALWAYS'
                files = true
                artifacts = true
                checksums = true
                signatures = true
                draft = false
                prerelease {

                    enabled = false
                    pattern = '.*-pre'
                }

                discussionCategoryName = 'Announcements'
                commitAuthor {
                    name = 'Ahmed Saheed'
                    email = 'saheed@quranCLI.com'
                }

                repoUrl = 'https://{{repoHost}}/{{repoOwner}}/{{repoName}}'
                repoCloneUrl = 'https://{{repoHost}}/{{repoOwner}}/{{repoName}}.git'
                commitUrl = 'https://{{repoHost}}/{{repoOwner}}/{{repoName}}/commits'
                srcUrl = 'https://{{repoHost}}/{{repoOwner}}/{{repoName}}/blob/{{repoBranch}}'
                downloadUrl = 'https://{{repoHost}}/{{repoOwner}}/{{repoName}}/releases/download/{{tagName}}/{{artifactFile}}'
                releaseNotesUrl = 'https://{{repoHost}}/{{repoOwner}}/{{repoName}}/releases/tag/{{tagName}}'
                latestReleaseUrl = 'https://{{repoHost}}/{{repoOwner}}/{{repoName}}/releases/latest'
                issueTrackerUrl = 'https://{{repoHost}}/{{repoOwner}}/{{repoName}}/issues'
            }

        }


    }

//    distributions {
//        app {
//            active = 'ALWAYS'
//            name = 'qurancli'
//            executable {
//                name = 'quranCLI'
//            }
//            artifact {
//                path = 'build/distributions/{{name}}-{{projectVersion}}.zip'
//            }
//        }
//    }
    distributions {
        qurancli {
            active = 'ALWAYS'
            name = 'qurancli'
            artifact {
                path = 'build/distributions/{{distributionName}}-{{projectVersion}}.zip'
            }
        }
    }

    packagers {
        brew {
            active = 'ALWAYS'
            continueOnError = false
            downloadUrl = 'https://{{repoHost}}/{{repoOwner}}/{{repoName}}/releases/download/{{tagName}}/{{artifactFile}}'
            commitAuthor {
                name = 'Ahmed Saheed'
                email = 'saheed@quranCLI.com'
            }
            repoTap {
                active = 'ALWAYS'
                owner = 'ahmedsaheed'
                name = 'homebrew-tap'
                tagName = '{{distributionName}} {{tagName}}'
                branch = 'HEAD'
                username = 'ahmedsaheed'
                commitMessage = '{{distributionName}} {{tagName}}'
            }
            formulaName = 'qurancli'
            multiPlatform = true
        }

        scoop {
            active = 'ALWAYS'
            continueOnError = false
            downloadUrl = 'https://{{repoHost}}/{{repoOwner}}/{{repoName}}/releases/download/{{tagName}}/{{artifactFile}}'
            commitAuthor {
                name = 'Ahmed Saheed'
                email = 'saheed@quranCLI.com'
            }
            bucket{
                active = 'ALWAYS'
                owner = 'ahmedsaheed'
                name = 'scoop-ahmedsaheed'
                tagName = '{{distributionName}} {{tagName}}'
                branch = 'HEAD'
                username = 'ahmedsaheed'
                commitMessage = '{{distributionName}} {{tagName}}'
            }
        }

    }
}
gradle.startParameter.excludedTaskNames += "licenseMain"
gradle.startParameter.excludedTaskNames += "licenseTest"

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}


test {
    useJUnitPlatform()
}